1.7-1
------
Николаю понадобилось решить задачу, в которой необходимо найти значение выражения "a/b" с точность до "c" знаков после запятой (1≤c≤10; 1≤a,b≤10^9; 1≤c≤10;1≤a,b≤10^0). Числа "a", "b", "c" целые и вводятся с клавиатуры. Какие типы данных необходимо использовать Николаю?
............
int; double

1.7-2
------
Сколько суммарно байт памяти занимают переменные в следующей программе?
int a;
long long b;
cin >> a >> b;
bool c = a > b;
cout << c << endl;
................................
int = 4, long long = 8, bool = 1

1.7-3
------
Недавно Настя узнала про ASCII-таблицу, в которой каждому символу сопоставлено число. На основе этой таблицы она решила написать секретную записку: каждый символ Настя заменила на соответствующий ему номер, и записала эту последовательность без пробелов. Например, фраза "I'll be back" зашифруется как "7339108108329810132989799107".

Вот записка в зашифрованном виде: 7797121321161041013210211111499101329810132119105116104328911111733.

Записка адресована вам, так что в ваших же интересах ее расшифровать. Гарантируется, что в самой записке Анастасия использовала только символы с номерами от 3232 до 127127. Гарантируется, что был зашифрован какой-то осмысленный текст на английском языке.
...........................
May the force be with You!

1.7-4
------
На олимпиадах по программированию бывают задачи на геометрию, и программисту Васе как раз попалась одна такая. Он написал код ее решения, однако не учел один случай, который приводит к тому, что программа начинает делать запрещенные математические операции. Ниже вы можете найти реализацию этой программы. Ваша задача - найти такие входные данные, при которых достигается запрещенная операция.

#include <iostream>
using namespace std;
int main() {
    cout.setf(ios::fixed);
    cout.precision(10);

    long double a1, b1, c1, a2, b2, c2;
    cin >> a1 >> b1 >> c1;
    cin >> a2 >> b2 >> c2;
    long double d = a1 * b2 - a2 * b1;
    long double dx = c2 * b1 - c1 * b2;
    long double dy = a2 * c1 - a1 * c2; 
    cout << dx / d << " " << dy / d << endl;
}
.............
1 1 1 1 1 1

1.7-5
------



